class Solution {
public:
    // int t[1001][1001];
    int longestCommonSubsequence(string a, string b) {
        // vector<vector<short>> m(a.size()+1, vector<short>(b.size()+1));
        // for(auto i=1;i<=a.size();++i)
        //     for(auto j=1;j<=b.size();++j)
        //         if(a[i-1] == b[j-1]){
        //             m[i][j] = 1+m[i-1][j-1];
        //         }
        //         else{
        //             m[i][j] = max(m[i-1][j], m[i][j-1]);
        //         }
        // return m[a.size()][b.size()];
        int m = a.size();
        int n = b.size();
        int t[m+1][n+1];
        for(int i=0;i<m+1;i++){
            for(int j=0;j<n+1;j++){
                if(i == 0 || j == 0){
                    t[i][j] = 0;
                }
            }
        }
        
        for(int i=1;i<m+1;i++){
            for(int j=1;j<n+1;j++){
                if(a[i-1] == b[j-1]){
                    t[i][j] = 1+t[i-1][j-1];
                }
                else{
                    t[i][j] = max(t[i-1][j], t[i][j-1]);
                }
            }
        }
        
        return t[m][n];
   
    }
    
    
};
